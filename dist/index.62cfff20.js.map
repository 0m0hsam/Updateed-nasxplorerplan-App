{"mappings":"AEAO,eAAe,EAClB,CAAU,CACV,CAAa,CACb,CAAI,CACJ,CAAQ,CACR,EAAW,YAAY,CACvB,EAAQ,CAAA,CAAI,EAER,GACF,CAAA,EAAc,SAAA,CAAY,EAD5B,EAGA,IAAM,EAAa,MAAM,EAAW,GACpC,EAAc,kBAAA,CAAmB,EAAU,GACvC,GACF,EAAS,EAEb,CAEF,SAAS,EAAa,CAAI,EAEtB,OAAO,iBACL,IAAM,EAAM,MAAM,MAAM,GACxB,GAAI,EAAI,EAAA,CAAI,CACV,IAAM,EAAO,MAAM,EAAI,IAAvB,GACA,OAAO,CACT,CACF,CACF,EDzBF,AC2BS,iBAIL,IAAM,EAAmB,EAAa,2BAChC,EAAmB,EAAa,2BAChC,EAAW,SAAS,aAAA,CAAc,gBAClC,EAAW,SAAS,aAAA,CAAc,gBACxC,EAAmB,EAAkB,GACrC,EAAmB,EAAkB,EACvC","sources":["<anon>","src/js/index.js","src/js/utils.mjs"],"sourcesContent":["async function $2a0a9d2c002157bd$export$16b3ba5fff8817e(templateFn, parentElement, data, callback, position = \"afterbegin\", clear = true) {\n    if (clear) parentElement.innerHTML = \"\";\n    const htmlString = await templateFn(data);\n    parentElement.insertAdjacentHTML(position, htmlString);\n    if (callback) callback(data);\n}\nfunction $2a0a9d2c002157bd$var$loadTemplate(path) {\n    // wait what?  we are returning a new function? this is called currying and can be very helpful.\n    return async function() {\n        const res = await fetch(path);\n        if (res.ok) {\n            const html = await res.text();\n            return html;\n        }\n    };\n}\nasync function $2a0a9d2c002157bd$export$a865117f198fadd2() {\n    // header template will still be a function! But one where we have pre-supplied the argument.\n    // headerTemplate and footerTemplate will be almost identical, but they will remember the path we passed in when we created them\n    // why is it important that they stay functions?  The renderWithTemplate function is expecting a template function...if we sent it a string it would break, if we changed it to expect a string then it would become less flexible.\n    const headerTemplateFn = $2a0a9d2c002157bd$var$loadTemplate(\"../partials/header.html\");\n    const footerTemplateFn = $2a0a9d2c002157bd$var$loadTemplate(\"../partials/footer.html\");\n    const headerEl = document.querySelector(\"#main-header\");\n    const footerEl = document.querySelector(\"#main-footer\");\n    $2a0a9d2c002157bd$export$16b3ba5fff8817e(headerTemplateFn, headerEl);\n    $2a0a9d2c002157bd$export$16b3ba5fff8817e(footerTemplateFn, footerEl);\n}\n\n\n(0, $2a0a9d2c002157bd$export$a865117f198fadd2)();\n\n\n//# sourceMappingURL=index.62cfff20.js.map\n","import { loadHeaderFooter } from \"./utils.mjs\";\r\n\r\nloadHeaderFooter();","export async function renderWithTemplate(\r\n    templateFn,\r\n    parentElement,\r\n    data,\r\n    callback,\r\n    position = \"afterbegin\",\r\n    clear = true\r\n  ) {\r\n    if (clear) {\r\n      parentElement.innerHTML = \"\";\r\n    }\r\n    const htmlString = await templateFn(data);\r\n    parentElement.insertAdjacentHTML(position, htmlString);\r\n    if (callback) {\r\n      callback(data);\r\n    }\r\n  }\r\n\r\nfunction loadTemplate(path) {\r\n    // wait what?  we are returning a new function? this is called currying and can be very helpful.\r\n    return async function () {\r\n      const res = await fetch(path);\r\n      if (res.ok) {\r\n        const html = await res.text();\r\n        return html;\r\n      }\r\n    };\r\n  }\r\n  \r\n  export async function loadHeaderFooter() {\r\n    // header template will still be a function! But one where we have pre-supplied the argument.\r\n    // headerTemplate and footerTemplate will be almost identical, but they will remember the path we passed in when we created them\r\n    // why is it important that they stay functions?  The renderWithTemplate function is expecting a template function...if we sent it a string it would break, if we changed it to expect a string then it would become less flexible.\r\n    const headerTemplateFn = loadTemplate(\"../partials/header.html\");\r\n    const footerTemplateFn = loadTemplate(\"../partials/footer.html\");\r\n    const headerEl = document.querySelector(\"#main-header\");\r\n    const footerEl = document.querySelector(\"#main-footer\");\r\n    renderWithTemplate(headerTemplateFn, headerEl);\r\n    renderWithTemplate(footerTemplateFn, footerEl);\r\n  }"],"names":["$2a0a9d2c002157bd$export$16b3ba5fff8817e","templateFn","parentElement","data","callback","position","clear","innerHTML","htmlString","insertAdjacentHTML","$2a0a9d2c002157bd$var$loadTemplate","path","res","fetch","ok","html","text","headerTemplateFn","footerTemplateFn","headerEl","document","querySelector","footerEl"],"version":3,"file":"index.62cfff20.js.map"}